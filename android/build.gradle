apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        applicationId "net.fabricemk.android.mycv"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 101
        versionName "1.01"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Enable Wear app packaging when generating production APK
    wearApp project(':wear')

    // Android Support Libraries
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:cardview-v7:23.0.0'
    compile 'com.android.support:gridlayout-v7:23.0.0'
    compile 'com.android.support:palette-v7:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.android.support:design:23.0.0'

    // Google Play Services
    compile 'com.google.android.gms:play-services-wearable:7.8.0'
    compile 'com.google.android.gms:play-services-maps:7.8.0'

    // Third-party libraries
    compile 'com.makeramen:roundedimageview:2.1.1'

    compile 'com.google.code.gson:gson:2.3.+'

    compile 'com.github.bumptech.glide:glide:3.6.+'
    compile 'com.github.bumptech.glide:volley-integration:1.3.0'
    compile 'com.mcxiaoke.volley:library:1.0.5'

    compile project(path: ':backend', configuration: 'android-endpoints')


    // Testing Libraries

    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.+"

    androidTestCompile('com.android.support.test:runner:0.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }
    // Set this dependency to use JUnit 4 rules
    androidTestCompile('com.android.support.test:rules:0.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }
    // Set this dependency to build and run Espresso tests
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }

    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }

    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'

}

if(project.hasProperty("MyCV.signing")
        && new File(project.property("MyCV.signing") + ".gradle").exists()) {
    apply from: project.property("MyCV.signing") + ".gradle";
}
